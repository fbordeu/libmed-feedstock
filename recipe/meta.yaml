{% set name = "libmed" %}
{% set version = "4.1.1" %}
{% set sha256 = "a082b705d1aafe95d3a231d12c57f0b71df554c253e190acca8d26fc775fb1e6" %}


package:
  name: {{ name }}
  version: {{ version }}

source:
  fn: {{ name }}_{{ version }}.tar.gz
  url: https://files.salome-platform.org/Salome/medfile/med-{{ version }}.tar.gz
  sha256: {{ sha256 }}
  patches:
    - patches/med-4.1.1-check-hdf5-parallel.diff  # [unix]

build:
  number: 4
#  string: aster_py{{ CONDA_PY }}_{{mpi}}_np{{CONDA_NPY}}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }} # [mpi != "nompi"]
#  string: aster_py{{ CONDA_PY }}_seq_np{{CONDA_NPY}}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}     # [mpi == "nompi"]  
  skip: true  # [py2k or osx or win or py>=312]
  script_env:
    - PKG_DEBUG={{ environ.get('PKG_DEBUG', 'False') }}

requirements:
  build:
    - {{ compiler('c') }}                 # [not win]
    - {{ compiler('cxx') }}               # [not win]
    - {{ compiler('fortran') }}           # [not win]
    - m2w64-gcc                           # [win]
    - m2w64-gcc-fortran                   # [win]
    - sysroot_linux-64 2.17               # [unix]
    - swig >=4.0.2
  host:
    - autoconf                            # [unix]
    - ninja                               # [win]
    - make                                # [not win]
    - cmake >=3.8                         # [win]
    - hdf5
    - python {{ python }}
    - astor
    - pybind11-stubgen
    - zlib
#    - {{ mpi }}                 # [mpi != "nompi"]        
  run:
    - {{ pin_compatible('hdf5', min_pin='x.x', max_pin='x.x') }}
    - {{ pin_compatible('python', min_pin='x.x', max_pin='x.x') }}
    - python {{ python }}
#    - {{ mpi }}                 # [mpi != "nompi"]    

test:
  imports:
    - med
  commands:
    - test -f $CONDA_PREFIX/lib/libmed.so  # [unix]
    - test -n "$(nm -D $CONDA_PREFIX/lib/libmed.so | grep MEDlibraryNumVersion)  # [unix]"

about:
  home: https://www.salome-platform.org/user-section/about/med
  license: LGPL-3.0-only
  license_family: LGPL
  license_file: LICENSE.txt
  summary: 'MED : interoperable format for data interchange between mesh based solvers.'
  description: |
    The purpose of the MED module is to provide a standard for storing and recovering computer data associated to numerical meshes and fields, and to facilitate the exchange between codes and solvers.
  doc_url: http://www.salome-platform.org/
  dev_url: https://git.salome-platform.org/gitweb/?p=modules/med.git;a=summary

extra:
  recipe-maintainers:
    - Krande
    - ldallolio
    - looooo
    - ldallolio-irt
